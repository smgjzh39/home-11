{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst serialize_1 = require(\"./serialize\");\n\nconst client_1 = require(\"./client\");\n\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/timezone/json\";\nexports.defaultParamsSerializer = serialize_1.serializer({\n  timestamp: serialize_1.toTimestamp,\n  location: serialize_1.latLngToString\n});\n\nfunction timezone(_a, axiosInstance = client_1.defaultAxiosInstance) {\n  var {\n    params,\n    method = \"get\",\n    url = exports.defaultUrl,\n    paramsSerializer = exports.defaultParamsSerializer\n  } = _a,\n      config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url,\n    paramsSerializer\n  }, config));\n}\n\nexports.timezone = timezone;","map":{"version":3,"sources":["../src/timezone.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAoDa,OAAA,CAAA,UAAA,GAAa,oDAAb;AACA,OAAA,CAAA,uBAAA,GAA0B,WAAA,CAAA,UAAA,CAAW;AAChD,EAAA,SAAS,EAAE,WAAA,CAAA,WADqC;AAEhD,EAAA,QAAQ,EAAE,WAAA,CAAA;AAFsC,CAAX,CAA1B;;AAIb,SAAgB,QAAhB,CACE,EADF,EAQE,aAAA,GAA+B,QAAA,CAAA,oBARjC,EAQqD;MAPnD;AACE,IAAA,MADF;AAEE,IAAA,MAAM,GAAG,KAFX;AAGE,IAAA,GAAG,GAAG,OAAA,CAAA,UAHR;AAIE,IAAA,gBAAgB,GAAG,OAAA,CAAA;AAJrB,MAI4C,E;MAC1C,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,KAAA,EAAA,kBAAA,CAAA,C;;AAIF,SAAO,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA;AAClB,IAAA,MADkB;AAElB,IAAA,MAFkB;AAGlB,IAAA,GAHkB;AAIlB,IAAA;AAJkB,GAAA,EAKf,MALe,CAAA,CAApB;AAOD;;AAjBD,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst serialize_1 = require(\"./serialize\");\nconst client_1 = require(\"./client\");\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/timezone/json\";\nexports.defaultParamsSerializer = serialize_1.serializer({\n    timestamp: serialize_1.toTimestamp,\n    location: serialize_1.latLngToString\n});\nfunction timezone(_a, axiosInstance = client_1.defaultAxiosInstance) {\n    var { params, method = \"get\", url = exports.defaultUrl, paramsSerializer = exports.defaultParamsSerializer } = _a, config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n    return axiosInstance(Object.assign({ params,\n        method,\n        url,\n        paramsSerializer }, config));\n}\nexports.timezone = timezone;\n//# sourceMappingURL=timezone.js.map"]},"metadata":{},"sourceType":"script"}