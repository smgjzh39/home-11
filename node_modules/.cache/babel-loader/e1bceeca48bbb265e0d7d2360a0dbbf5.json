{"ast":null,"code":"var _jsxFileName = \"/Users/chengsong/Documents/GitHub/house-search-helper/src/components/HouseDetails.js\";\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport houselisting from '../assets/mocks/data';\nimport sf_housing_data from '../assets/mocks/sf_housing_data.json';\nexport default function HouseDetails() {\n  let houseCardId = useParams(); // let num = props.match.params.id;\n\n  console.log(houseCardId);\n  const houses = sf_housing_data.find(house => {\n    if (!!house.zpid) {\n      if (house.zpid === houseCardId.id) {\n        return house;\n      }\n    } else {}\n  });\n\n  if (houses === undefined) {\n    console.log(\"undefined\");\n  } // const houseInfo = house.fields;\n  // const { title, description, capacity, type, images, price, city, state, zip, size\n  // } = houseInfo;\n\n\n  let price = houses.price;\n  let imgSrc = houses.imgSrc;\n  let id, title, statusType, beds, baths, city, state, zip, location;\n\n  if (!!houses.zpid) {\n    // with zpid\n    id = houses.zpid;\n    title = houses.hdpData.homeInfo.streetAddress;\n    statusType = houses.statusText;\n    beds = houses.beds;\n    baths = houses.baths;\n    city = houses.hdpData.homeInfo.city;\n    state = houses.hdpData.homeInfo.state;\n    zip = houses.hdpData.homeInfo.zipcode;\n    location = city + \" • \" + state + \" • \" + zip;\n  } else {\n    // with buildingId\n    id = houses.buildingId;\n    title = houses.statusText;\n    statusType = houses.statusType;\n    beds = houses.minBeds;\n    baths = houses.minBaths;\n    location = \" \";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"house-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"house-details-content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"article\", {\n    className: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"description\")), /*#__PURE__*/React.createElement(\"article\", {\n    className: \"information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Info\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Type: type\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"price : $price\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"size : size SQFT\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 30\n    }\n  }, location)))));\n}","map":{"version":3,"sources":["/Users/chengsong/Documents/GitHub/house-search-helper/src/components/HouseDetails.js"],"names":["React","useParams","houselisting","sf_housing_data","HouseDetails","houseCardId","console","log","houses","find","house","zpid","id","undefined","price","imgSrc","title","statusType","beds","baths","city","state","zip","location","hdpData","homeInfo","streetAddress","statusText","zipcode","buildingId","minBeds","minBaths"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    useParams,\n} from \"react-router-dom\";\nimport houselisting from '../assets/mocks/data';\nimport sf_housing_data from '../assets/mocks/sf_housing_data.json'\n\n\nexport default function HouseDetails() {\n\n    let houseCardId = useParams();\n    // let num = props.match.params.id;\n    console.log(houseCardId);\n\n     const houses = sf_housing_data.find(house => \n        {\n            if (!!house.zpid){\n               if (house.zpid === houseCardId.id) {\n                   return house;\n               }\n            } else {\n\n            }\n        }\n        );\n\n    if (houses === undefined) {\n        console.log(\"undefined\");\n    }\n\n    // const houseInfo = house.fields;\n    // const { title, description, capacity, type, images, price, city, state, zip, size\n    // } = houseInfo;\n\n    let price = houses.price;\n    let imgSrc = houses.imgSrc;\n    let id, title, statusType, beds, baths, city, state, zip, location;\n    \n    if (!!houses.zpid) {\n        // with zpid\n        id = houses.zpid;\n        title = houses.hdpData.homeInfo.streetAddress;\n        statusType = houses.statusText;\n        beds = houses.beds;\n        baths = houses.baths;\n        city = houses.hdpData.homeInfo.city;\n        state = houses.hdpData.homeInfo.state;\n        zip = houses.hdpData.homeInfo.zipcode;\n        location = city + \" • \" + state + \" • \" + zip;\n    } else {\n        // with buildingId\n        id = houses.buildingId;\n        title = houses.statusText;\n        statusType = houses.statusType;\n        beds = houses.minBeds;\n        baths = houses.minBaths;\n        location = \" \";\n    }\n\n    return (\n        <div>\n            <section className= \"house-details-container\">\n                \n                {/* <div className=\"house-details-images-container\">{images.map((image, index) =>\n                    <img key={index} src={image.fields.file.url} alt={title} />)}</div> */}\n                \n                <div className=\"house-details-content-container\">\n\n                        <article className=\"description\">\n                            <h3>Details</h3>\n                            <p>description</p>\n                        </article>\n                        <article className=\"information\">\n                            <h3>Info</h3>\n                            <p>Type: type</p>\n                            <p>price : $price</p>\n                            <p>size : size SQFT</p>\n                            {/* <p>\n                                max capacity :\n                {capacity > 1 ? `${capacity} people` : `${capacity} person`}\n                            </p>\n                            <p>{`${city} • ${state} • ${zip}`}</p> */}\n                             <p>{location}</p>\n                        </article>\n\n                </div>\n            </section>\n\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}