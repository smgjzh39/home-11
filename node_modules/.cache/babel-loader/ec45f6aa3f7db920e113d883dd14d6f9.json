{"ast":null,"code":"var _jsxFileName = \"/Users/chengsong/Documents/GitHub/house-search-helper/src/pages/table.js\";\nimport React, { useState } from 'react';\nimport sf_housing_data from '../assets/mocks/sf_housing_data.json';\nimport sf_housing_data_full from '../assets/mocks/sf_housing_data_full.json';\nexport default function table() {\n  // let price = house.price;\n  // let imgSrc = house.imgSrc;\n  // let latitude = house.latLong.latitude;\n  // let longtitude = house.latLong.longitude;\n  // let id, title, statusType, beds, baths, area, streetAddress, city, state, zip, location;\n  const tableHeaders = [{\n    name: \"Title\",\n    field: \"title\",\n    sortable: false\n  }, {\n    name: \"Area\",\n    field: \"area\",\n    sortable: true\n  }, {\n    name: \"Price\",\n    field: \"price\",\n    sortable: true\n  }, {\n    name: \"Beds\",\n    field: \"beds\",\n    sortable: false\n  }, {\n    name: \"Baths\",\n    field: \"baths\",\n    sortable: false\n  }, {\n    name: \"Location\",\n    field: \"location\",\n    sortable: false\n  }];\n  console.log(sf_housing_data.length);\n  console.log(sf_housing_data_full.length);\n  const [tableItems, setTableItems] = useState([]);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, tableHeaders.map(head => /*#__PURE__*/React.createElement(\"th\", {\n    key: head.field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, head.name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, sf_housing_data.map(house => /*#__PURE__*/React.createElement(\"tr\", {\n    key: house.zpid ? house.zpid : house.buildingId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, house.zpid ? house.hdpData.homeInfo.streetAddress : house.statusText), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, house.zpid ? house.area ? house.area : \"NA\" : house.minArea), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, house.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, house.zpid ? house.beds : house.minBeds), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, house.zpid ? house.baths : house.minBaths), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, house.zpid ? house.hdpData.homeInfo.streetAddress + /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 73\n    }\n  }) : house.latLong.latitude + \", \" + house.latLong.longitude)))));\n}","map":{"version":3,"sources":["/Users/chengsong/Documents/GitHub/house-search-helper/src/pages/table.js"],"names":["React","useState","sf_housing_data","sf_housing_data_full","table","tableHeaders","name","field","sortable","console","log","length","tableItems","setTableItems","map","head","house","zpid","buildingId","hdpData","homeInfo","streetAddress","statusText","area","minArea","price","beds","minBeds","baths","minBaths","latLong","latitude","longitude"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport sf_housing_data from '../assets/mocks/sf_housing_data.json'\nimport sf_housing_data_full from '../assets/mocks/sf_housing_data_full.json'\n\nexport default function table() {\n\n\n    // let price = house.price;\n    // let imgSrc = house.imgSrc;\n    // let latitude = house.latLong.latitude;\n    // let longtitude = house.latLong.longitude;\n    // let id, title, statusType, beds, baths, area, streetAddress, city, state, zip, location;\n\n    const tableHeaders = [\n        { name: \"Title\", field: \"title\", sortable: false },\n        { name: \"Area\", field: \"area\", sortable: true },\n        { name: \"Price\", field: \"price\", sortable: true },\n        { name: \"Beds\", field: \"beds\", sortable: false },\n        { name: \"Baths\", field: \"baths\", sortable: false },\n        { name: \"Location\", field: \"location\", sortable: false }\n    ];\n\n    console.log(sf_housing_data.length);\n    console.log(sf_housing_data_full.length);\n\n\n    const [tableItems, setTableItems] = useState([]);\n\n\n\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    {  \n                        tableHeaders.map( head => (\n                            <th key={head.field}>\n                                {head.name}\n                            </th>\n                        ))\n                    }\n                </tr>\n            </thead>\n            <tbody>\n                \n                    {\n                        sf_housing_data.map ( house => (\n                        <tr key={house.zpid? house.zpid : house.buildingId}>\n                            {/* <td>\n                             { name: \"No#\", field: \"id\", sortable: false },\n        { name: \"Title\", field: \"title\", sortable: false },\n        { name: \"Price\", field: \"price\", sortable: true },\n        { name: \"Beds\", field: \"beds\", sortable: false },\n        { name: \"Baths\", field: \"baths\", sortable: false },\n        { name: \"Location\", field: \"location\", sortable: false } \n\n        beds = house.beds;\n        baths = house.baths;\n        area = house.area;\n        \n        streetAddress = house.hdpData.homeInfo.streetAddress;\n        city = house.hdpData.homeInfo.city;\n        state = house.hdpData.homeInfo.state;\n        zip = house.hdpData.homeInfo.zipcode;\n        location = city + \" • \" + state + \" • \" + zip;\n        // with buildingId\n        id = house.buildingId;\n        title = house.statusText;\n        statusType = house.statusType;\n        beds = house.minBeds;\n        baths = house.minBaths;\n        area = house.minArea;\n\n        location = \" \";\n                            </td> */}\n                            <td>\n                                {house.zpid? house.hdpData.homeInfo.streetAddress : house.statusText}\n                            </td>\n                            <td>\n                                {house.zpid? house.area ? house.area : \"NA\" : house.minArea}\n                            </td>\n                            <td>\n                                {house.price}\n                            </td>\n                            <td>\n                                {house.zpid? house.beds : house.minBeds}\n                            </td>\n                            <td>\n                                {house.zpid? house.baths : house.minBaths}\n                            </td>\n                            <td>\n                                {house.zpid? \n                                house.hdpData.homeInfo.streetAddress + (<br />)\n                                : house.latLong.latitude+\", \"+house.latLong.longitude}\n                            </td>\n                        </tr>\n                        ) )\n                    }\n            </tbody>\n        </table>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}