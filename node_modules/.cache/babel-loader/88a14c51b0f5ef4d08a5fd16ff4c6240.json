{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst client_1 = require(\"./client\");\n\nvar GeolocateErrorReason;\n\n(function (GeolocateErrorReason) {\n  /**\n   * You have exceeded your daily limit.\n   * Domain: usageLimits\n   * Code: 403\n   */\n  GeolocateErrorReason[\"dailyLimitExceeded\"] = \"dailyLimitExceeded\";\n  /**\n   * Your API key is not valid for the Geolocate API. Please ensure that you've included the entire key,\n   * and that you've either purchased the API or have enabled billing and activated the API to obtain the free quota.\n   * Domain: usageLimits\n   * Code: 400\n   */\n\n  GeolocateErrorReason[\"keyInvalid\"] = \"keyInvalid\";\n  /**\n   * You have exceeded the requests per second per user limit that you configured in the Google Cloud Platform Console.\n   * This limit should be configured to prevent a single or small group of users from exhausting your daily quota,\n   * while still allowing reasonable access to all users.\n   * Domain: usageLimits\n   * Code: 403\n   */\n\n  GeolocateErrorReason[\"userRateLimitExceeded\"] = \"userRateLimitExceeded\";\n  /**\n   * The request was valid, but no results were returned.\n   * Domain: geolocation\n   * Code: 404\n   */\n\n  GeolocateErrorReason[\"notFound\"] = \"notFound\";\n  /**\n   * The request body is not valid JSON. Refer to the Request Body section for details on each field.\n   * Domain: global\n   * Code: 400\n   */\n\n  GeolocateErrorReason[\"parseError\"] = \"parseError\";\n})(GeolocateErrorReason = exports.GeolocateErrorReason || (exports.GeolocateErrorReason = {}));\n\nexports.defaultUrl = \"https://www.googleapis.com/geolocation/v1/geolocate\";\n\nfunction geolocate(_a, axiosInstance = client_1.defaultAxiosInstance) {\n  var {\n    params,\n    method = \"post\",\n    url = exports.defaultUrl\n  } = _a,\n      config = __rest(_a, [\"params\", \"method\", \"url\"]);\n\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url\n  }, config));\n}\n\nexports.geolocate = geolocate;","map":{"version":3,"sources":["../src/geolocate.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,MAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AA2DA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC9B;;;;;AAKA,EAAA,oBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAA;AACA;;;;;;;AAMA,EAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA;;;;;;;;AAOA,EAAA,oBAAA,CAAA,uBAAA,CAAA,GAAA,uBAAA;AACA;;;;;;AAKA,EAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA;;;;;;AAKA,EAAA,oBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAlCD,EAAY,oBAAoB,GAApB,OAAA,CAAA,oBAAA,KAAA,OAAA,CAAA,oBAAA,GAAoB,EAApB,CAAZ;;AAwCa,OAAA,CAAA,UAAA,GAAa,qDAAb;;AAEb,SAAgB,SAAhB,CACE,EADF,EAEE,aAAA,GAA+B,QAAA,CAAA,oBAFjC,EAEqD;MADnD;AAAE,IAAA,MAAF;AAAU,IAAA,MAAM,GAAG,MAAnB;AAA2B,IAAA,GAAG,GAAG,OAAA,CAAA;AAAjC,MAA2C,E;MAAE,MAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,KAAA,CAAA,C;;AAG7C,SAAO,aAAa,CAAA,MAAA,CAAA,MAAA,CAAA;AAClB,IAAA,MADkB;AAElB,IAAA,MAFkB;AAGlB,IAAA;AAHkB,GAAA,EAIf,MAJe,CAAA,CAApB;AAMD;;AAVD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_1 = require(\"./client\");\nvar GeolocateErrorReason;\n(function (GeolocateErrorReason) {\n    /**\n     * You have exceeded your daily limit.\n     * Domain: usageLimits\n     * Code: 403\n     */\n    GeolocateErrorReason[\"dailyLimitExceeded\"] = \"dailyLimitExceeded\";\n    /**\n     * Your API key is not valid for the Geolocate API. Please ensure that you've included the entire key,\n     * and that you've either purchased the API or have enabled billing and activated the API to obtain the free quota.\n     * Domain: usageLimits\n     * Code: 400\n     */\n    GeolocateErrorReason[\"keyInvalid\"] = \"keyInvalid\";\n    /**\n     * You have exceeded the requests per second per user limit that you configured in the Google Cloud Platform Console.\n     * This limit should be configured to prevent a single or small group of users from exhausting your daily quota,\n     * while still allowing reasonable access to all users.\n     * Domain: usageLimits\n     * Code: 403\n     */\n    GeolocateErrorReason[\"userRateLimitExceeded\"] = \"userRateLimitExceeded\";\n    /**\n     * The request was valid, but no results were returned.\n     * Domain: geolocation\n     * Code: 404\n     */\n    GeolocateErrorReason[\"notFound\"] = \"notFound\";\n    /**\n     * The request body is not valid JSON. Refer to the Request Body section for details on each field.\n     * Domain: global\n     * Code: 400\n     */\n    GeolocateErrorReason[\"parseError\"] = \"parseError\";\n})(GeolocateErrorReason = exports.GeolocateErrorReason || (exports.GeolocateErrorReason = {}));\nexports.defaultUrl = \"https://www.googleapis.com/geolocation/v1/geolocate\";\nfunction geolocate(_a, axiosInstance = client_1.defaultAxiosInstance) {\n    var { params, method = \"post\", url = exports.defaultUrl } = _a, config = __rest(_a, [\"params\", \"method\", \"url\"]);\n    return axiosInstance(Object.assign({ params,\n        method,\n        url }, config));\n}\nexports.geolocate = geolocate;\n//# sourceMappingURL=geolocate.js.map"]},"metadata":{},"sourceType":"script"}